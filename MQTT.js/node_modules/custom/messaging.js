'use strict'

var messaging = Messaging.prototype;

/* Static Methods */
// ...


/* Non-Static Methods */

function Messaging(firebaseAdmin, isDebug) {
	this._firebaseAdmin = firebaseAdmin;
	this._isDebug = isDebug;

	if (this._isDebug) {
		console.log("Messaging: new instance");
	}
}

/*
* Build payload json object based on firebase structure
* Refer to https://firebase.google.com/docs/cloud-messaging/admin/send-messages#defining_the_message_payload
* title		(string)	title for notification
* message	(string)	message or body for notification
* extras	(object)	any additional key-value object
*/
messaging.buildPayload = function(title, message, extras) {
	if (this._isDebug) {
		console.log("buildPayload: creating payload object");
	}
	var notification  = { "title": title, "body": message };
	return { "notification": notification, "data": extras };
};

messaging.send = function(topic, payload) {
	// Send a message to devices subscribed to the provided topic.
	this._firebaseAdmin.messaging().sendToTopic(topic, payload)
		.then(function(response) {
		// See the MessagingTopicResponse reference documentation for the
		// contents of response.
		if (this._isDebug) {
			console.log("Successfully sent message:", response);
		}
	})
	.catch(function(error) {
		if (this._isDebug) {
			console.log("Error sending message:", error);
		}	
	});
};

module.exports = Messaging;